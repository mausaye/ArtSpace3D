{"ast":null,"code":"var _jsxFileName = \"/Users/esthershin/ArtSpace3D/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport MainMenuRoot from './routes/MainMenuRoot';\nimport DummyEnvironmentCreationPage from './routes/DummyEnvCreationPage';\nimport InstructionsPage from './routes/InstructionsPage';\nimport GettingStartedInst from './routes/InstructionsTabs/GettingStartedInst';\nimport Shapes from './routes/InstructionsTabs/Shapes';\nimport Color from './routes/InstructionsTabs/Color';\nimport Brightness from './routes/InstructionsTabs/Brightness';\nimport Sizing from './routes/InstructionsTabs/Sizing';\nimport Rotation from './routes/InstructionsTabs/Rotation';\nimport reportWebVitals from './reportWebVitals';\nimport ErrorPage from './routes/ErrorPage';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(MainMenuRoot, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 19\n  }, this)\n},\n/*\n{\n  path: \"/EnvironmentCreationPage\",\n  element: <DummyEnvironmentCreationPage/>\n},\n*/\n\n{\n  path: \"/InstructionsPage/\",\n  element: /*#__PURE__*/_jsxDEV(InstructionsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"GettingStarted\",\n    element: /*#__PURE__*/_jsxDEV(GettingStartedInst, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"Shapes\",\n    element: /*#__PURE__*/_jsxDEV(Shapes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"Color\",\n    element: /*#__PURE__*/_jsxDEV(Color, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"Brightness\",\n    element: /*#__PURE__*/_jsxDEV(Brightness, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"Sizing\",\n    element: /*#__PURE__*/_jsxDEV(Sizing, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"Rotation\",\n    element: /*#__PURE__*/_jsxDEV(Rotation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }, this)\n  }]\n}]);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","MainMenuRoot","DummyEnvironmentCreationPage","InstructionsPage","GettingStartedInst","Shapes","Color","Brightness","Sizing","Rotation","reportWebVitals","ErrorPage","createBrowserRouter","RouterProvider","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","root","createRoot","document","getElementById","render","StrictMode"],"sources":["/Users/esthershin/ArtSpace3D/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport MainMenuRoot from './routes/MainMenuRoot';\nimport DummyEnvironmentCreationPage from './routes/DummyEnvCreationPage';\nimport InstructionsPage from './routes/InstructionsPage';\nimport GettingStartedInst from './routes/InstructionsTabs/GettingStartedInst';\nimport Shapes from './routes/InstructionsTabs/Shapes';\nimport Color from './routes/InstructionsTabs/Color';\nimport Brightness from './routes/InstructionsTabs/Brightness';\nimport Sizing from './routes/InstructionsTabs/Sizing';\nimport Rotation from './routes/InstructionsTabs/Rotation';\nimport reportWebVitals from './reportWebVitals';\nimport ErrorPage from './routes/ErrorPage';\n\nimport{\n  createBrowserRouter, \n  RouterProvider,\n} from \"react-router-dom\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <MainMenuRoot />,\n    errorElement: <ErrorPage />,\n  },\n\n  /*\n  {\n    path: \"/EnvironmentCreationPage\",\n    element: <DummyEnvironmentCreationPage/>\n  },\n  */\n\n  {\n    path: \"/InstructionsPage/\",\n    element: <InstructionsPage/>,\n    children: [\n      {\n        path: \"GettingStarted\",\n        element: <GettingStartedInst />\n      },\n      {\n        path: \"Shapes\",\n        element: <Shapes />\n      },\n      {\n        path: \"Color\",\n        element: <Color />\n      },\n      {\n        path: \"Brightness\",\n        element: <Brightness />\n      },\n      {\n        path: \"Sizing\",\n        element: <Sizing />\n      },\n      {\n        path: \"Rotation\",\n        element: <Rotation />\n      },\n    ],\n    \n  },\n]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router = {router} />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,4BAA4B,MAAM,+BAA+B;AACxE,OAAOC,gBAAgB,MAAM,2BAA2B;AACxD,OAAOC,kBAAkB,MAAM,8CAA8C;AAC7E,OAAOC,MAAM,MAAM,kCAAkC;AACrD,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAOC,UAAU,MAAM,sCAAsC;AAC7D,OAAOC,MAAM,MAAM,kCAAkC;AACrD,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,oBAAoB;AAE1C,SACEC,mBAAmB,EACnBC,cAAc,QACT,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGJ,mBAAmB,CAAC,CACjC;EACEK,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACd,YAAY;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EACzBC,YAAY,eAAER,OAAA,CAACJ,SAAS;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAC1B,CAAC;AAED;AACF;AACA;AACA;AACA;AACA;;AAEE;EACEL,IAAI,EAAE,oBAAoB;EAC1BC,OAAO,eAAEH,OAAA,CAACZ,gBAAgB;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;EAC5BE,QAAQ,EAAE,CACR;IACEP,IAAI,EAAE,gBAAgB;IACtBC,OAAO,eAAEH,OAAA,CAACX,kBAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC9B,CAAC,EACD;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACV,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClB,CAAC,EACD;IACEL,IAAI,EAAE,OAAO;IACbC,OAAO,eAAEH,OAAA,CAACT,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjB,CAAC,EACD;IACEL,IAAI,EAAE,YAAY;IAClBC,OAAO,eAAEH,OAAA,CAACR,UAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACtB,CAAC,EACD;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACP,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClB,CAAC,EACD;IACEL,IAAI,EAAE,UAAU;IAChBC,OAAO,eAAEH,OAAA,CAACN,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACpB,CAAC;AAGL,CAAC,CACF,CAAC;AAEF,MAAMG,IAAI,GAAGzB,QAAQ,CAAC0B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTd,OAAA,CAAChB,KAAK,CAAC+B,UAAU;EAAAN,QAAA,eACfT,OAAA,CAACF,cAAc;IAACG,MAAM,EAAIA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACnB,CACpB;;AAED;AACA;AACA;AACAZ,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}